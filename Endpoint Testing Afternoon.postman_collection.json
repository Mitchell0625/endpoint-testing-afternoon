{
	"info": {
		"_postman_id": "0c941b16-d539-444a-b060-a279be3276d3",
		"name": "Endpoint Testing Afternoon",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET - All Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b89adc33-8d39-4b48-b203-1a40052abf8a",
						"type": "text/javascript",
						"exec": [
							"const res = pm.response.json()",
							"",
							"pm.test('Should be 200', ()=> {",
							"    pm.expect(pm.response.code).to.eql(200)",
							"})",
							"",
							"pm.test('Should an array', ()=> {",
							"    pm.expect(Array.isArray(res)).to.eql(true)",
							"})",
							"",
							"pm.test('Should have length of 100', ()=> {",
							"    pm.expect(res.length).to.eql(100);",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3535/api/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - User by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d045bd7d-ab42-4d1d-ba9c-222442fce8e8",
						"type": "text/javascript",
						"exec": [
							"const res = pm.response.json()",
							"const expectedObj = {",
							"    id: 9,",
							"    first_name: \"Tatum\",",
							"    last_name: 'Vell',",
							"    email: 'tvell8@wisc.edu',",
							"    city: 'Youngstown',",
							"    state: 'Ohio',",
							"    phone: '(330) 6802507'",
							"}",
							"",
							"pm.test('Should have 200 status', ()=> {",
							"    pm.expect(pm.response.code).to.eql(200)",
							"})",
							"",
							"pm.test('Should be an array with a length of 1', ()=>{",
							"    pm.expect(Array.isArray(res)).to.eql(true);",
							"    pm.expect(res.length).to.eql(1);",
							"})",
							"",
							"pm.test('Should be an object', ()=>{",
							"    pm.expect(res[0]).to.eql(expectedObj)",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:3535/api/users/9",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users",
						"9"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - User by ID ( error )",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "67d5b59c-ff73-456d-a96a-4cb58f4b4f45",
						"type": "text/javascript",
						"exec": [
							"const retMsg = 'User id sent must be a number'",
							"",
							"",
							"pm.test('Should have status 400', ()=> {",
							"    pm.expect(pm.response.code).to.eql(400);",
							"})",
							"",
							"pm.test('Should equal message', ()=> {",
							"    pm.expect(pm.response.text()).to.eql(retMsg)",
							"})",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:3535/api/users/id",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users",
						"id"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - User with Query",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b6e2d4e6-1dcc-4deb-ae79-eb2a9769c175",
						"type": "text/javascript",
						"exec": [
							"const res = pm.response.json()",
							"",
							"pm.test('200 Status', ()=> {",
							"    pm.expect(pm.response.code).to.eql(200)",
							"})",
							"",
							"pm.test('Length should be greater than 0', ()=> {",
							"    pm.expect(res.length > 0).to.eql(true)",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3535/api/users?firstName=t",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "firstName",
							"value": "t"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - User with Query ( error )",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "27e1ed6a-9b7f-41bb-8e19-6304d83b0bbd",
						"type": "text/javascript",
						"exec": [
							"pm.test('400 status', ()=> {",
							"    pm.expect(pm.response.code).to.eql(400)",
							"})",
							"",
							"pm.test('returned message', ()=> {",
							"    pm.expect(pm.response.text()).to.eql(\"Improper query sent in request: citty=new york\")",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3535/api/users?citty=new york",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "citty",
							"value": "new york"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT - Update user by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "17e8067e-af22-4049-839b-e24acbc7e913",
						"type": "text/javascript",
						"exec": [
							"const res = pm.response.json()",
							"",
							"pm.test('200 status', ()=>{",
							"    pm.expect(pm.response.code).to.eql(200)",
							"})",
							"",
							"pm.test('Array w/ 1 item', ()=> {",
							"    pm.expect(res.length).to.eql(1)",
							"})",
							"",
							"pm.test('updated user email', () => {",
							"    pm.expect(res[0].email).to.eql('garey@ilovecode.com')",
							"})",
							" ",
							"pm.test('updated user city', ()=> {",
							"    pm.expect(res[0].city).to.eql('Pittsburg')",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"garey@ilovecode.com\",\n\t\"city\": \"Pittsburg\"\n}"
				},
				"url": {
					"raw": "http://localhost:3535/api/users/23",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users",
						"23"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT - Update user by ID ( error )",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "62d25fca-9c9f-499c-b65d-ebac42829782",
						"type": "text/javascript",
						"exec": [
							"pm.test('400 status', ()=>{",
							"    pm.expect(pm.response.code).to.eql(400)",
							"})",
							"",
							"pm.test('returned message should be empty', ()=>{",
							"    pm.expect(pm.response.text()).to.eql(\"Error with user ID in request.\")",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"garey@ilovecode.com\",\n\t\"city\": \"Pittsburg\"\n}"
				},
				"url": {
					"raw": "http://localhost:3535/api/users/userId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users",
						"userId"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST - Create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a0b33e8c-a219-447b-b62d-ca0ef9cc9253",
						"type": "text/javascript",
						"exec": [
							"const res = pm.response.json()",
							"",
							"pm.test('200 status', ()=>{",
							"    pm.expect(pm.response.code).to.eql(200)",
							"})",
							"",
							"pm.test('Array has length of 1', ()=>{",
							"    pm.expect(res.length).to.eql(1)",
							"})",
							"",
							"pm.test('first_name is Bruce', ()=>{",
							"    pm.expect(res[0].first_name).to.eql('Bruce')",
							"})",
							"",
							"pm.test('last_name is Wayne', ()=>{",
							"    pm.expect(res[0].last_name).to.eql('Wayne')",
							"})",
							"",
							"pm.test('email is bruce@scarybat.com', ()=>{",
							"    pm.expect(res[0].email).to.eql('bruce@scarybat.com')",
							"})",
							"",
							"pm.test('city is Gotham', ()=>{",
							"    pm.expect(res[0].city).to.eql('Gotham')",
							"})",
							"",
							"pm.test('state is New Jersey', ()=>{",
							"    pm.expect(res[0].state).to.eql('New Jersey')",
							"})",
							"",
							"pm.test('phone is (856) 6044252)', ()=>{",
							"    pm.expect(res[0].phone).to.eql('(856) 6044252')",
							"})",
							"",
							"pm.test('user id is a number', ()=>{",
							"    pm.expect(typeof res[0].id).to.eql('number')",
							"})",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"first_name\": \"Bruce\",\n\t\"last_name\": \"Wayne\",\n\t\"email\": \"bruce@scarybat.com\",\n\t\"city\": \"Gotham\",\n\t\"state\": \"New Jersey\",\n\t\"phone\": \"(856) 6044252\"\n}"
				},
				"url": {
					"raw": "http://localhost:3535/api/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST - Create user ( error )",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fb739c17-2241-4ef1-8ee4-f99a9022c6ec",
						"type": "text/javascript",
						"exec": [
							"pm.test('400 status', ()=>{",
							"    pm.expect(pm.response.code).to.eql(400)",
							"})",
							"",
							"pm.test('returned message', ()=>{",
							"    pm.expect(pm.response.text()).to.eql(\"All needed user info was not sent in the body of request.\")",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"first_name\": \"Bruce\",\n\t\"last_name\": \"Wayne\",\n\t\"email\": \"bruce@scarybat.com\",\n\t\"state\": \"New Jersey\",\n\t\"phone\": \"(856) 6044252\"\n}"
				},
				"url": {
					"raw": "http://localhost:3535/api/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE - Remove user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8dbd1522-58ba-423a-a5a4-a06fbbc58505",
						"type": "text/javascript",
						"exec": [
							"const res = pm.response.json()[0]",
							"",
							"pm.test('200 status', ()=>{",
							"    pm.expect(pm.response.code).to.eql( 200 )",
							"})",
							"",
							"pm.test('user id is 66', () =>{",
							"    pm.expect(res.id).to.eql(66)",
							"})",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"first_name\": \"Bruce\",\n\t\"last_name\": \"Wayne\",\n\t\"email\": \"bruce@scarybat.com\",\n\t\"city\": \"Gotham\",\n\t\"state\": \"New Jersey\",\n\t\"phone\": \"(856) 6044252\"\n}"
				},
				"url": {
					"raw": "http://localhost:3535/api/users/66",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users",
						"66"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE - Remove user ( error )",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f1846061-289e-4ce8-91da-2cbb4cfbbcf0",
						"type": "text/javascript",
						"exec": [
							"pm.test('404 status', () => {",
							"    pm.expect(pm.response.code).to.eql(404)",
							"})",
							"",
							"pm.test('returned message', () => {",
							"    pm.expect(pm.response.text()).to.eql('No user with an ID of 508.')",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"first_name\": \"Bruce\",\n\t\"last_name\": \"Wayne\",\n\t\"email\": \"bruce@scarybat.com\",\n\t\"city\": \"Gotham\",\n\t\"state\": \"New Jersey\",\n\t\"phone\": \"(856) 6044252\"\n}"
				},
				"url": {
					"raw": "http://localhost:3535/api/users/508",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users",
						"508"
					]
				}
			},
			"response": []
		}
	]
}